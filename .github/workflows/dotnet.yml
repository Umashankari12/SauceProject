name: .NET SpecFlow Tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x

    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y wget unzip curl jq libgbm-dev libxshmfence1 libasound2

    - name: Install Google Chrome
      run: |
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt update
        sudo apt install -y google-chrome-stable
        google-chrome --version

    - name: Install ChromeDriver
      run: |
        CHROME_VERSION=$(google-chrome --version | grep -oP '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' | head -1)
        CHROMEDRIVER_URL=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/known-good-versions-with-downloads.json" \
          | jq -r ".versions[] | select(.version==\"$CHROME_VERSION\") | .downloads.chromedriver[] | select(.platform==\"linux64\") | .url")

        if [[ -z "$CHROMEDRIVER_URL" ]]; then
          echo "❌ Error: No matching ChromeDriver found for Chrome version $CHROME_VERSION"
          exit 1
        fi

        wget -O chromedriver.zip "$CHROMEDRIVER_URL"
        unzip chromedriver.zip
        sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver
        chromedriver --version

    - name: Verify Installed Chrome & ChromeDriver
      run: |
        google-chrome --version
        chromedriver --version

    - name: Debug - List Files
      run: ls -R

    - name: Restore dependencies
      working-directory: sauceLabs_PageObject  # ✅ Change if your project is in a different folder
      run: dotnet restore

    - name: Build project
      working-directory: sauceLabs_PageObject
      run: dotnet build --no-restore --configuration Release

    - name: List available tests (for debugging)
      working-directory: sauceLabs_PageObject
      run: dotnet test --list-tests

    - name: Run SpecFlow Tests (Happy Flow)
      working-directory: sauceLabs_PageObject
      run: dotnet test --no-build --configuration Release --filter "FullyQualifiedName~ExecutionOfSaucedemo"

